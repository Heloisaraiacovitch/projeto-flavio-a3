package provas;
//importacoes necessarias para manipular os arquivos
import java.util.Scanner; //para ler entrada do teclado
import java.io.File;//para representar arquivos
import java.io.IOException;//para tratar excecoes de entrada 
import java.io.OutputStream;
import java.io.FileWriter;//para escrever em arquivos
import java.io.PrintWriter;//para escrever em arquivos com mais recursos
import java.io.FileInputStream;//abre o arquivo de origem para ler
import java.io.FileOutputStream;//abre o arquivo de destino para escrita
import java.io.InputStream;

public class ATUALIZACAO02 {

	public static void main(String[] args) {
			        Scanner scanner = new Scanner(System.in);//ler entrada 

			        // Mostrar o menu
			        System.out.println("MENU");
			        System.out.println("[1] Abrir o arquivo");
			        System.out.println("[2] Renomear arquivo");
			        System.out.println("[3] Mover arquivo");
			        System.out.println("[4] Copiar arquivo");
			        System.out.println("[5] Excluir arquivo");
			        System.out.println("[6] Sair");

			        // Chama o método para receber a escolha do usuário
			        int opcao = receber();
			        scanner.nextLine(); // 

			        
			        switch (opcao) {
			            case 1:
			                // Ação para abrir o arquivo
			                System.out.print("Digite o caminho do arquivo: ");
			                String caminho = scanner.nextLine();
			                File arquivo = new File(caminho);//criar um objeto com esse caminho

			                if (arquivo.exists()) {//verificar se esse arquivo existe
			                    System.out.println("Arquivo encontrado: " + arquivo.getAbsolutePath());
			                    salvarAcao("Arquivo aberto: " + caminho);//salvar acao
			                } else {
			                    System.out.println("Arquivo não encontrado.");
			                }
			                break;
			            case 2:
			                // Ação para renomear o arquivo
			                break;
			            case 3:
			                // Ação para mover o arquivo
			                break;
			            case 4:
			                // Ação para copiar o arquivo
			                break;
			            case 5:
			                // Ação para excluir o arquivo
			                break;
			            case 6:
			                // Sair
			                System.out.println("Saindo...");
			                break;
			            default:
			                System.out.println("Opção inválida.");
			                break;
			        }

			        scanner.close();
			    }

			    private static int receber() {
			        Scanner scanner = new Scanner(System.in);
			        System.out.print("Escolha a opção: ");
			        return scanner.nextInt();
			    	
			    }		
			    public static void salvarAcao(String acao) {
			        try (PrintWriter writer = new PrintWriter(new FileWriter("log.txt", true))) {
			            writer.println(acao);
			        } catch (IOException e) {
			            System.out.println("Erro ao salvar ação no log");}// lembrar
			            
			    }
			     public void renomerArquivo(String caminho,String novoNome) {
			    	 try {//renomear o arquivo
			    	  File arquivo = new File(caminho);
			    		 if (arquivo.exists()) {
			    			File novoArquivo = new File(arquivo.getParent(), novoNome);
			    			if (arquivo.renameTo(novoArquivo)) {
			    				System.out.println("Arquivo ou pasta renomeado com sucesso");
			    			} else {
			    				System.out.println("Erro ou nomear arquivo ou pasta");
			    			}
			    		 }else {
			    			 System.out.println("Arquivo ou pasta não encontrado");
			    		 }
			    	 } catch (Exception e) {
			    		 System.out.println ("Erro ao renomear arquivo ou pasta");
			    	 }
			     }
			    	 public void renomearArquivo(FileManager fileManager) {
			    		 Scanner scanner = new Scanner(System.in);//novo nome
			    		 
			    		  System.out.print("Digite o caminho do arquivo:");
			    		  String caminho = scanner.nextLine();
			    		 
			    		  System.out.print("Digite o novo nome:");
			    		  String novoNome = scanner.nextLine();
			    		  
			    		  renomerArquivo(caminho, novoNome);
			    	  scanner.close();
			    	 }
			    	  public void moverArquivo(String origem,String destino) {
				    	 try {//mover o arquivo 
				    	 File arquivoOrigem = new File(origem);
				    	 File arquivoDestino = new File(destino);
				    	 if(arquivoOrigem.exists()) {// Verificar se esse arquivo existe 
				    		 if(arquivoOrigem.renameTo(arquivoDestino)) {// mover para o novo destino
				    	       System.out.println("Arquivo movido com sucesso");
				    	 } else {
				    		 System.out.println("Erro ao mover o arquivo");
				    	 } 
			    	  }else {
			    		  System.out.println("Arquivo de origem perdido");
			    	  }// caso ocorra algum erro
                     } catch (Exception e) {
                    	 System.out.println("Erro ao mover o arquivo" + e.getMessage());
			    	  }
			    	  } // metado de copiar o arquivo 
			    	  public void copiarArquivo(String origem,String destino) {
					    	 try (
					    		InputStream in = new FileInputStream(origem);
					    		 OutputStream out = new FileOutputStream(destino)
					    		 ){
					    			 byte[] buffer = new byte[1024];	// cria um buffer com espaco para copiar em blocos 	
					    			 int length; 
					    			 // le do no arquivo de origem e copia no arquivo destinado
					    			 while ((length = in.read(buffer))> 0) {
					    				 out.write(buffer, 0, length);
					    				 }
					    			 System.out.println("Arquivo copiado com sucesso");
					    		 } catch (IOException e) {
					    			 System.out.println(" Erro ao copiar" + e.getMessage());
					    		 }
			    	  }
                    public void excluirArquivo(String caminho) {//excluir o arquivo
	                try {
	                	File arquivo = new File (caminho);
	                
	                
	                if (arquivo.exists()) {// verificar se o arquivo ainda existe
	                	if (arquivo.delete()) { //tentar excluir
	                		System.out.println("Arquivo excluido com sucesso");
	                	} else {
	                		System.out.println("Erro ao excluir");
	                	}
	                } else { 
	                	System.out.println("Arquivo nao encontrado");
	                }
	                } catch (Exception e){
	                	//caso ocorra algum erro
	                	System.out.println("Erro ao excluir" + e.getMessage());
	                	
	                }
                    
                    }
